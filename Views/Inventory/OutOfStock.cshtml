@model IEnumerable<Billing_Software.Models.Inventory>
@{
    ViewData["Title"] = "Out of Stock Items";
}

<!-- Compact Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h4 class="mb-1 fw-bold">
            <i class="bi bi-x-circle text-danger me-2"></i>Out of Stock Items
        </h4>
        <p class="text-muted small mb-0">Items that need immediate reordering</p>
    </div>
    <div class="btn-group btn-group-sm">
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="bi bi-arrow-left me-1"></i>Back to Inventory
        </a>
        <a asp-action="LowStock" class="btn btn-outline-warning btn-sm">
            <i class="bi bi-exclamation-triangle me-1"></i>Low Stock
        </a>
    </div>
</div>

@if (Model.Any())
{
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-lg-4 col-md-6 mb-3">
                <div class="card border-0 shadow-sm h-100 border-danger">
                    <div class="card-body p-3">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div class="flex-grow-1">
                                <h6 class="mb-1 fw-bold">@item.Name</h6>
                                <span class="badge bg-light text-dark rounded-pill small">@item.Category</span>
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-action="Details" asp-route-id="@item.Id">
                                        <i class="bi bi-eye me-2"></i>View Details
                                    </a></li>
                                    <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@item.Id">
                                        <i class="bi bi-pencil me-2"></i>Edit
                                    </a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@item.Id">
                                        <i class="bi bi-trash me-2"></i>Delete
                                    </a></li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="alert alert-danger alert-sm mb-3">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-x-circle me-2 mt-1"></i>
                                <div>
                                    <strong>Out of Stock</strong>
                                    <div class="small">Current: 0, Minimum: @item.MinStockLevel</div>
                                </div>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(item.Description))
                        {
                            <p class="text-muted small mb-3">@item.Description</p>
                        }
                        
                        <div class="row text-center g-2 mb-3">
                            <div class="col-4">
                                <div class="border rounded p-2 bg-light">
                                    <div class="fw-bold text-danger small">0</div>
                                    <small class="text-muted">In Stock</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="border rounded p-2 bg-light">
                                    <div class="fw-bold text-success small">@item.Price.ToString("0.00")</div>
                                    <small class="text-muted">Price</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="border rounded p-2 bg-light">
                                    <div class="fw-bold text-info small">$0.00</div>
                                    <small class="text-muted">Value</small>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="badge bg-danger rounded-pill small">Out of Stock</span>
                            </div>
                            <div class="text-end">
                                <small class="text-muted">SKU: @(item.SKU ?? "N/A")</small>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(item.Supplier))
                        {
                            <div class="mt-2">
                                <small class="text-muted">
                                    <i class="bi bi-truck me-1"></i>@item.Supplier
                                </small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Summary Stats -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 pb-0">
                    <h6 class="mb-0 fw-bold">
                        <i class="bi bi-graph-up text-info me-2"></i>Out of Stock Summary
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row text-center g-3">
                        <div class="col-md-3">
                            <div class="border rounded p-3 bg-light">
                                <div class="h5 text-danger mb-1">@Model.Count()</div>
                                <small class="text-muted">Out of Stock Items</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 bg-light">
                                <div class="h5 text-warning mb-1">@Model.Sum(i => i.MinStockLevel)</div>
                                <small class="text-muted">Minimum Units Needed</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 bg-light">
                                <div class="h5 text-info mb-1">@Model.Sum(i => i.MinStockLevel * i.Price).ToString("0.00")</div>
                                <small class="text-muted">Reorder Value</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="border rounded p-3 bg-light">
                                <div class="h5 text-info mb-1">@Model.GroupBy(i => i.Category).Count()</div>
                                <small class="text-muted">Categories Affected</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Category Breakdown -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 pb-0">
                    <h6 class="mb-0 fw-bold">
                        <i class="bi bi-tags text-info me-2"></i>Out of Stock by Category
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var category in Model.GroupBy(i => i.Category))
                        {
                            <div class="col-md-4 mb-3">
                                <div class="border rounded p-3 bg-light">
                                    <h6 class="mb-2">@category.Key</h6>
                                    <div class="d-flex justify-content-between">
                                        <span class="text-danger">@category.Count() items</span>
                                        <span class="text-muted">@category.Sum(i => i.MinStockLevel) units needed</span>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Priority Reorder List -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-transparent border-0 pb-0">
                    <h6 class="mb-0 fw-bold">
                        <i class="bi bi-cart text-info me-2"></i>Priority Reorder List
                    </h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Item</th>
                                    <th>Category</th>
                                    <th>Supplier</th>
                                    <th>Price</th>
                                    <th>Min Stock</th>
                                    <th>Reorder Value</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderBy(i => i.Category).ThenBy(i => i.Name))
                                {
                                    <tr>
                                        <td>
                                            <strong>@item.Name</strong>
                                            @if (!string.IsNullOrEmpty(item.SKU))
                                            {
                                                <br><small class="text-muted">SKU: @item.SKU</small>
                                            }
                                        </td>
                                        <td><span class="badge bg-info rounded-pill small">@item.Category</span></td>
                                        <td>@(item.Supplier ?? "Not specified")</td>
                                        <td>@item.Price.ToString("0.00")</td>
                                        <td>@item.MinStockLevel</td>
                                        <td>@((item.MinStockLevel * item.Price).ToString("0.00"))</td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="col-12">
        <div class="card border-0 shadow-sm text-center py-5">
            <div class="text-muted">
                <i class="bi bi-check-circle display-4 text-success mb-3"></i>
                <h5>No Out of Stock Items</h5>
                <p class="small">All inventory items have stock available!</p>
            </div>
        </div>
    </div>
}

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-sm alert-dismissible fade show" role="alert">
        <div class="d-flex align-items-start">
            <i class="bi bi-check-circle me-2 mt-1"></i>
            <div>@TempData["SuccessMessage"]</div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-sm alert-dismissible fade show" role="alert">
        <div class="d-flex align-items-start">
            <i class="bi bi-exclamation-triangle me-2 mt-1"></i>
            <div>@TempData["ErrorMessage"]</div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<style>
    .card { transition: transform 0.2s ease-in-out; }
    .card:hover { transform: translateY(-1px); }
    .alert-sm { padding: 0.5rem 0.75rem; font-size: 0.875rem; }
    .btn-sm { padding: 0.375rem 0.75rem; font-size: 0.875rem; }
    .badge { font-size: 0.75rem; font-weight: 500; }
    .table th { font-weight: 600; font-size: 0.75rem; text-transform: uppercase; letter-spacing: 0.5px; }
    .table td { font-size: 0.875rem; }
</style> 