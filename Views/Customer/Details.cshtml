@model Billing_Software.Models.Customer
@{
    ViewData["Title"] = "Customer Details";
    var invoices = ViewBag.Invoices as IEnumerable<Billing_Software.Models.Invoice>;
    var serviceRecords = ViewBag.ServiceRecords as IEnumerable<Billing_Software.Models.ServiceRecord>;
    var vehicles = ViewBag.Vehicles as IEnumerable<Billing_Software.Models.Vehicle>;
}

<!-- Compact Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="h4 mb-1 fw-bold text-dark">Customer Details</h2>
        <p class="text-muted small mb-0">View and manage customer information</p>
    </div>
    <div class="d-flex gap-2">
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-sm">
            <i class="bi bi-pencil me-2"></i>Edit
        </a>
        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
            <i class="bi bi-arrow-left me-2"></i>Back to List
        </a>
    </div>
</div>

<div class="row g-4">
    <!-- Customer Information -->
    <div class="col-lg-4">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <div class="d-flex align-items-center mb-3">
                    <div class="bg-info bg-opacity-10 text-info rounded-circle d-flex align-items-center justify-content-center me-3" 
                         style="width: 60px; height: 60px; font-size: 1.5rem; font-weight: 600;">
                        @Model.Name.Substring(0, 1).ToUpper()
                    </div>
                    <div>
                        <h5 class="mb-1 fw-bold">@Model.Name</h5>
                        <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary") rounded-pill small">
                            @(Model.IsActive ? "Active" : "Inactive")
                        </span>
                    </div>
                </div>

                <div class="mb-3">
                    <h6 class="text-muted small fw-medium mb-2">Contact Information</h6>
                    <div class="d-flex align-items-center mb-2">
                        <i class="bi bi-telephone text-primary me-2"></i>
                        <a href="tel:@Model.Phone" class="text-decoration-none small">@Model.Phone</a>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Email))
                    {
                        <div class="d-flex align-items-center mb-2">
                            <i class="bi bi-envelope text-primary me-2"></i>
                            <a href="mailto:@Model.Email" class="text-decoration-none small">@Model.Email</a>
                        </div>
                    }
                </div>

                @if (!string.IsNullOrEmpty(Model.Address))
                {
                    <div class="mb-3">
                        <h6 class="text-muted small fw-medium mb-2">Address</h6>
                        <div class="d-flex">
                            <i class="bi bi-geo-alt text-primary me-2 mt-1"></i>
                            <div class="small">
                                <div>@Model.Address</div>
                                @if (!string.IsNullOrEmpty(Model.City))
                                {
                                    <div class="text-muted">@Model.City, @Model.State @Model.ZipCode</div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <div class="mb-3">
                    <h6 class="text-muted small fw-medium mb-2">Customer Since</h6>
                    <div class="d-flex align-items-center">
                        <i class="bi bi-calendar text-primary me-2"></i>
                        <span class="small">@Model.CreatedDate.ToString("MMMM dd, yyyy")</span>
                    </div>
                </div>

                <div class="d-grid gap-2">
                    <a asp-controller="Invoice" asp-action="Create" asp-route-customerId="@Model.Id" 
                       class="btn btn-primary btn-sm">
                        <i class="bi bi-receipt me-2"></i>Create Invoice
                    </a>
                    <a asp-controller="Service" asp-action="Create" asp-route-customerId="@Model.Id" 
                       class="btn btn-success btn-sm">
                        <i class="bi bi-tools me-2"></i>Schedule Service
                    </a>
                    <a asp-controller="Customer" asp-action="Jobs" asp-route-id="@Model.Id" 
                       class="btn btn-info btn-sm">
                        <i class="bi bi-clipboard-list me-2"></i>Manage Jobs
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics -->
    <div class="col-lg-8">
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <div class="card border-0 shadow-sm text-center">
                    <div class="card-body p-3">
                        <div class="bg-info bg-opacity-10 text-info rounded-circle d-flex align-items-center justify-content-center mx-auto mb-2" 
                             style="width: 50px; height: 50px;">
                            <i class="bi bi-receipt fs-5"></i>
                        </div>
                        <h4 class="mb-1 fw-bold">@(invoices?.Count() ?? 0)</h4>
                        <p class="text-muted small mb-0">Total Invoices</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card border-0 shadow-sm text-center">
                    <div class="card-body p-3">
                        <div class="bg-info bg-opacity-10 text-info rounded-circle d-flex align-items-center justify-content-center mx-auto mb-2" 
                             style="width: 50px; height: 50px;">
                            <i class="bi bi-tools fs-5"></i>
                        </div>
                        <h4 class="mb-1 fw-bold">@(serviceRecords?.Count() ?? 0)</h4>
                        <p class="text-muted small mb-0">Service Records</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card border-0 shadow-sm text-center">
                    <div class="card-body p-3">
                        <div class="bg-info bg-opacity-10 text-info rounded-circle d-flex align-items-center justify-content-center mx-auto mb-2" 
                             style="width: 50px; height: 50px;">
                            <i class="bi bi-car-front fs-5"></i>
                        </div>
                        <h4 class="mb-1 fw-bold">@(vehicles?.Count() ?? 0)</h4>
                        <p class="text-muted small mb-0">Vehicles</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0 pb-0">
                <h6 class="mb-0 fw-bold">
                    <i class="bi bi-clock text-primary me-2"></i>Recent Activity
                </h6>
            </div>
            <div class="card-body">
                <div class="timeline">
                    @{
                        var recentActivities = new List<object>();
                        recentActivities.AddRange(invoices?.Take(3) ?? new List<Invoice>());
                        recentActivities.AddRange(serviceRecords?.Take(3) ?? new List<ServiceRecord>());
                        var sortedActivities = recentActivities.OrderByDescending(x => 
                            x is Invoice ? ((Invoice)x).CreatedDate : ((ServiceRecord)x).CreatedDate).Take(5);
                    }
                    
                    @foreach (var activity in sortedActivities)
                    {
                        if (activity is Invoice invoice)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon bg-primary">
                                    <i class="bi bi-receipt"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6 class="small fw-medium">Invoice Created</h6>
                                    <p class="mb-1 small">Invoice #@invoice.InvoiceNumber for @invoice.Total.ToString("C")</p>
                                    <small class="text-muted">@invoice.CreatedDate.ToString("MMM dd, yyyy")</small>
                                </div>
                            </div>
                        }
                        else if (activity is ServiceRecord service)
                        {
                            <div class="timeline-item">
                                <div class="timeline-icon bg-success">
                                    <i class="bi bi-tools"></i>
                                </div>
                                <div class="timeline-content">
                                    <h6 class="small fw-medium">Service Scheduled</h6>
                                    <p class="mb-1 small">@service.ServiceType on @service.ServiceDate.ToString("MMM dd, yyyy")</p>
                                    <small class="text-muted">@service.CreatedDate.ToString("MMM dd, yyyy")</small>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Tabs for Related Data -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0">
                <ul class="nav nav-tabs nav-tabs-sm" id="customerTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active small" id="vehicles-tab" data-bs-toggle="tab" data-bs-target="#vehicles" type="button" role="tab">
                            <i class="bi bi-car-front me-1"></i>Vehicles (@(vehicles?.Count() ?? 0))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link small" id="invoices-tab" data-bs-toggle="tab" data-bs-target="#invoices" type="button" role="tab">
                            <i class="bi bi-receipt me-1"></i>Invoices (@(invoices?.Count() ?? 0))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link small" id="services-tab" data-bs-toggle="tab" data-bs-target="#services" type="button" role="tab">
                            <i class="bi bi-tools me-1"></i>Services (@(serviceRecords?.Count() ?? 0))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link small" id="jobs-tab" data-bs-toggle="tab" data-bs-target="#jobs" type="button" role="tab">
                            <i class="bi bi-clipboard-list me-1"></i>Jobs (@(ViewBag.JobLists?.Count() ?? 0))
                        </button>
                    </li>
                </ul>
            </div>

            <div class="card-body p-0">
                <div class="tab-content" id="customerTabsContent">
                    <!-- Vehicles Tab -->
                    <div class="tab-pane fade show active" id="vehicles" role="tabpanel">
                        <div class="p-3">
                            @if (vehicles?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th class="border-0 small">Brand</th>
                                                <th class="border-0 small">Model</th>
                                                <th class="border-0 small">Year</th>
                                                <th class="border-0 small">Plate Number</th>
                                                <th class="border-0 small">Color</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var vehicle in vehicles)
                                            {
                                                <tr>
                                                    <td class="py-2">@vehicle.Brand</td>
                                                    <td class="py-2">@vehicle.Model</td>
                                                    <td class="py-2">@vehicle.Year</td>
                                                    <td class="py-2">@vehicle.PlateNumber</td>
                                                    <td class="py-2">@vehicle.Color</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="bi bi-car-front text-muted" style="font-size: 3rem;"></i>
                                    <p class="text-muted small mt-2 mb-0">No vehicles registered for this customer</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Invoices Tab -->
                    <div class="tab-pane fade" id="invoices" role="tabpanel">
                        <div class="p-3">
                            @if (invoices?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th class="border-0 small">Invoice #</th>
                                                <th class="border-0 small">Date</th>
                                                <th class="border-0 small">Amount</th>
                                                <th class="border-0 small">Status</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var invoice in invoices)
                                            {
                                                <tr>
                                                    <td class="py-2">
                                                        <a asp-controller="Invoice" asp-action="Details" asp-route-id="@invoice.Id" 
                                                           class="text-decoration-none fw-medium">
                                                            @invoice.InvoiceNumber
                                                        </a>
                                                    </td>
                                                    <td class="py-2 small">@invoice.InvoiceDate.ToString("MMM dd, yyyy")</td>
                                                    <td class="py-2 fw-bold">@invoice.Total.ToString("C")</td>
                                                    <td class="py-2">
                                                        <span class="badge bg-@(invoice.Status.ToString().ToLower() == "paid" ? "success" : 
                                                                           invoice.Status.ToString().ToLower() == "unpaid" ? "warning" : "secondary") rounded-pill small">
                                                            @invoice.Status
                                                        </span>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="bi bi-receipt text-muted" style="font-size: 3rem;"></i>
                                    <p class="text-muted small mt-2 mb-0">No invoices for this customer</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Services Tab -->
                    <div class="tab-pane fade" id="services" role="tabpanel">
                        <div class="p-3">
                            @if (serviceRecords?.Any() == true)
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm mb-0">
                                        <thead class="table-light">
                                            <tr>
                                                <th class="border-0 small">Service Type</th>
                                                <th class="border-0 small">Date</th>
                                                <th class="border-0 small">Status</th>
                                                <th class="border-0 small">Cost</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var service in serviceRecords)
                                            {
                                                <tr>
                                                    <td class="py-2">
                                                        <a asp-controller="Service" asp-action="Details" asp-route-id="@service.Id" 
                                                           class="text-decoration-none fw-medium">
                                                            @service.ServiceType
                                                        </a>
                                                    </td>
                                                    <td class="py-2 small">@service.ServiceDate.ToString("MMM dd, yyyy")</td>
                                                    <td class="py-2">
                                                        <span class="badge bg-@(service.Status.ToString().ToLower() == "completed" ? "success" : 
                                                                           service.Status.ToString().ToLower() == "scheduled" ? "info" : "warning") rounded-pill small">
                                                            @service.Status
                                                        </span>
                                                    </td>
                                                    <td class="py-2">@(service.Cost?.ToString("C") ?? "-")</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="bi bi-tools text-muted" style="font-size: 3rem;"></i>
                                    <p class="text-muted small mt-2 mb-0">No service records for this customer</p>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Jobs Tab -->
                    <div class="tab-pane fade" id="jobs" role="tabpanel">
                        <div class="p-3">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h6 class="mb-0 fw-bold">Job List Management</h6>
                                <div class="d-flex gap-2">
                                    <button type="button" class="btn btn-primary btn-sm" onclick="createDefaultJobs()">
                                        <i class="bi bi-plus me-1"></i>Create Default Jobs
                                    </button>
                                    <a asp-controller="JobList" asp-action="Create" asp-route-customerId="@Model.Id" class="btn btn-success btn-sm">
                                        <i class="bi bi-plus me-1"></i>Add Custom Job
                                    </a>
                                </div>
                            </div>

                            <div id="jobListContainer">
                                <!-- Jobs will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.timeline {
    position: relative;
    padding-left: 30px;
}

.timeline-item {
    position: relative;
    margin-bottom: 15px;
}

.timeline-icon {
    position: absolute;
    left: -40px;
    top: 0;
    width: 25px;
    height: 25px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 0.75rem;
}

.timeline-content {
    background: #f8f9fa;
    padding: 12px;
    border-radius: 6px;
    border-left: 3px solid var(--bs-primary);
}

.nav-tabs-sm .nav-link {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
}

.table th {
    font-weight: 600;
    font-size: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.table td {
    font-size: 0.875rem;
}

.badge {
    font-size: 0.75rem;
    font-weight: 500;
}

.btn-sm {
    padding: 0.375rem 0.75rem;
    font-size: 0.875rem;
}

.card {
    transition: transform 0.2s ease-in-out;
}

.card:hover {
    transform: translateY(-1px);
}
</style>

<script>
$(document).ready(function() {
    // Load jobs when jobs tab is clicked
    $('#jobs-tab').on('click', function() {
        loadCustomerJobs();
    });

    // Load jobs initially if jobs tab is active
    if ($('#jobs-tab').hasClass('active')) {
        loadCustomerJobs();
    }
});

function loadCustomerJobs() {
    $.ajax({
        url: '@Url.Action("GetCustomerJobs", "Customer")',
        type: 'GET',
        data: { customerId: @Model.Id },
        success: function(jobs) {
            displayJobs(jobs);
        },
        error: function() {
            $('#jobListContainer').html('<div class="alert alert-danger alert-sm">Failed to load jobs.</div>');
        }
    });
}

function displayJobs(jobs) {
    const container = $('#jobListContainer');
    
    if (jobs && jobs.length > 0) {
        let html = `
            <div class="table-responsive">
                <table class="table table-sm mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="border-0 small">Job Name</th>
                            <th class="border-0 small">Description</th>
                            <th class="border-0 small">Price</th>
                            <th class="border-0 small">Status</th>
                            <th class="border-0 small">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
        `;
        
        jobs.forEach(function(job) {
            const statusBadge = getStatusBadge(job.status);
            const selectionButton = job.isSelected ? 
                `<button type="button" class="btn btn-warning btn-sm" onclick="toggleJobSelection(@Model.Id, ${job.id})">
                    <i class="bi bi-check-square"></i> Selected
                </button>` :
                `<button type="button" class="btn btn-outline-primary btn-sm" onclick="toggleJobSelection(@Model.Id, ${job.id})">
                    <i class="bi bi-square"></i> Select
                </button>`;
            
            const completionButton = job.isCompleted ? 
                `<button type="button" class="btn btn-warning btn-sm" onclick="markJobIncomplete(@Model.Id, ${job.id})">
                    <i class="bi bi-arrow-counterclockwise"></i> Undo
                </button>` :
                `<button type="button" class="btn btn-success btn-sm" onclick="markJobCompleted(@Model.Id, ${job.id})">
                    <i class="bi bi-check"></i> Complete
                </button>`;
            
            html += `
                <tr>
                    <td class="py-2"><strong>${job.jobName}</strong></td>
                    <td class="py-2 small">${job.description || 'No description'}</td>
                    <td class="py-2 fw-bold">$${job.price.toFixed(2)}</td>
                    <td class="py-2">${statusBadge}</td>
                    <td class="py-2">
                        <div class="btn-group btn-group-sm">
                            ${selectionButton}
                            ${completionButton}
                        </div>
                    </td>
                </tr>
            `;
        });
        
        html += `
                    </tbody>
                </table>
            </div>
        `;
        
        container.html(html);
    } else {
        container.html(`
            <div class="text-center py-4">
                <i class="bi bi-clipboard-list text-muted" style="font-size: 3rem;"></i>
                <p class="text-muted small mt-2 mb-0">No jobs found</p>
                <button type="button" class="btn btn-primary btn-sm mt-2" onclick="createDefaultJobs()">
                    <i class="bi bi-plus me-1"></i>Create Default Jobs
                </button>
            </div>
        `);
    }
}

function getStatusBadge(status) {
    const statusMap = {
        'Available': 'badge-secondary',
        'Selected': 'badge-warning',
        'Completed': 'badge-success',
        'Pending': 'badge-info'
    };
    return `<span class="badge ${statusMap[status] || 'badge-secondary'} rounded-pill small">${status}</span>`;
}

function createDefaultJobs() {
    $.ajax({
        url: '@Url.Action("CreateDefaultJobs", "Customer")',
        type: 'POST',
        data: { customerId: @Model.Id },
        success: function(response) {
            if (response.success) {
                loadCustomerJobs();
                // Show success message (you can use toastr or alert)
                alert('Default jobs created successfully!');
            } else {
                alert('Failed to create default jobs.');
            }
        },
        error: function() {
            alert('Failed to create default jobs.');
        }
    });
}

function markJobCompleted(customerId, jobId) {
    $.ajax({
        url: '@Url.Action("MarkJobCompleted", "Customer")',
        type: 'POST',
        data: { customerId: customerId, jobListId: jobId },
        success: function(response) {
            if (response.success) {
                loadCustomerJobs();
                alert('Job marked as completed!');
            } else {
                alert('Failed to mark job as completed.');
            }
        },
        error: function() {
            alert('Failed to mark job as completed.');
        }
    });
}

function markJobIncomplete(customerId, jobId) {
    $.ajax({
        url: '@Url.Action("MarkJobIncomplete", "Customer")',
        type: 'POST',
        data: { customerId: customerId, jobListId: jobId },
        success: function(response) {
            if (response.success) {
                loadCustomerJobs();
                alert('Job marked as incomplete!');
            } else {
                alert('Failed to mark job as incomplete.');
            }
        },
        error: function() {
            alert('Failed to mark job as incomplete.');
        }
    });
}

function toggleJobSelection(customerId, jobId) {
    $.ajax({
        url: '@Url.Action("ToggleJobSelection", "Customer")',
        type: 'POST',
        data: { customerId: customerId, jobListId: jobId },
        success: function(response) {
            if (response.success) {
                loadCustomerJobs();
                alert('Job selection updated!');
            } else {
                alert('Failed to update job selection.');
            }
        },
        error: function() {
            alert('Failed to update job selection.');
        }
    });
}
</script> 