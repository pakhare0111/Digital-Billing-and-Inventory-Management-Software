@model Billing_Software.Models.Invoice
@{
    ViewData["Title"] = "Delete Invoice";
}

<!-- Compact Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="h4 mb-1 fw-bold text-dark">Delete Invoice</h2>
        <p class="text-muted small mb-0">Confirm invoice deletion</p>
    </div>
    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
        <i class="bi bi-arrow-left me-2"></i>Back to List
    </a>
</div>

<div class="row g-4">
    <div class="col-lg-8">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0 pb-0">
                <h6 class="mb-0 fw-bold text-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>Delete Confirmation
                </h6>
            </div>
            <div class="card-body">
                <div class="alert alert-danger alert-sm" role="alert">
                    <div class="d-flex align-items-start">
                        <i class="bi bi-exclamation-triangle me-2 mt-1"></i>
                        <div>
                            <strong>Warning:</strong> Are you sure you want to delete this invoice? This action cannot be undone.
                        </div>
                    </div>
                </div>

                <div class="row g-3">
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">Invoice Information</h6>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="small text-muted">Invoice #:</span>
                            <span class="small fw-medium">@Model.InvoiceNumber</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="small text-muted">Date:</span>
                            <span class="small">@Model.InvoiceDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="small text-muted">Status:</span>
                            <div>
                                @{
                                    var statusClass = Model.Status.ToString().ToLower() switch
                                    {
                                        "paid" => "bg-success",
                                        "unpaid" => "bg-warning",
                                        "overdue" => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @statusClass rounded-pill small">@Model.Status</span>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span class="small text-muted">Total:</span>
                            <span class="small fw-bold">@Model.Total.ToString("0.00")</span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold mb-3">Customer Information</h6>
                        @if (Model.Customer != null)
                        {
                            <div class="d-flex justify-content-between mb-2">
                                <span class="small text-muted">Name:</span>
                                <span class="small fw-medium">@Model.Customer.Name</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="small text-muted">Phone:</span>
                                <span class="small">@Model.Customer.Phone</span>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Customer.Email))
                            {
                                <div class="d-flex justify-content-between mb-2">
                                    <span class="small text-muted">Email:</span>
                                    <span class="small">@Model.Customer.Email</span>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-muted small">Customer information not available</div>
                        }
                    </div>
                </div>

                @if (Model.InvoiceItems != null && Model.InvoiceItems.Any())
                {
                    <div class="alert alert-warning alert-sm mt-3" role="alert">
                        <div class="d-flex align-items-start">
                            <i class="bi bi-info-circle me-2 mt-1"></i>
                            <div>
                                <strong>Invoice Items:</strong> This invoice contains @Model.InvoiceItems.Count() item(s):
                                <ul class="mb-0 mt-2 small">
                                    @foreach (var item in Model.InvoiceItems.Take(5))
                                    {
                                        <li>@(item.Inventory?.Name ?? "Unknown Item") - @item.Quantity x @item.UnitPrice.ToString("0.00")</li>
                                    }
                                    @if (Model.InvoiceItems.Count > 5)
                                    {
                                        <li>... and @(Model.InvoiceItems.Count - 5) more items</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }

                <form asp-action="Delete" method="post">
                    <div class="d-flex justify-content-between mt-4">
                        <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                            <i class="bi bi-x-circle me-2"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-danger btn-sm">
                            <i class="bi bi-trash me-2"></i>Delete Invoice
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card border-0 shadow-sm mb-3">
            <div class="card-header bg-transparent border-0 pb-0">
                <h6 class="mb-0 fw-bold text-danger">
                    <i class="bi bi-info-circle me-2"></i>What happens when you delete?
                </h6>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mb-0">
                    <li class="d-flex align-items-start mb-2">
                        <i class="bi bi-check-circle text-danger me-2 mt-1"></i>
                        <span class="small">Invoice record is permanently deleted</span>
                    </li>
                    <li class="d-flex align-items-start mb-2">
                        <i class="bi bi-check-circle text-danger me-2 mt-1"></i>
                        <span class="small">All invoice items are deleted</span>
                    </li>
                    <li class="d-flex align-items-start mb-2">
                        <i class="bi bi-check-circle text-danger me-2 mt-1"></i>
                        <span class="small">Payment information is lost</span>
                    </li>
                    <li class="d-flex align-items-start">
                        <i class="bi bi-check-circle text-danger me-2 mt-1"></i>
                        <span class="small">This action cannot be undone</span>
                    </li>
                </ul>
            </div>
        </div>

        <div class="card border-0 shadow-sm">
            <div class="card-header bg-transparent border-0 pb-0">
                <h6 class="mb-0 fw-bold text-warning">
                    <i class="bi bi-lightbulb me-2"></i>Alternative Options
                </h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning btn-sm">
                        <i class="bi bi-pencil me-2"></i>Edit Instead
                    </a>
                    <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-eye me-2"></i>View Details
                    </a>
                    @if (Model.Status == InvoiceStatus.Unpaid || Model.Status == InvoiceStatus.Overdue)
                    {
                        <button type="button" class="btn btn-outline-success btn-sm" onclick="markAsPaid()">
                            <i class="bi bi-check-circle me-2"></i>Mark as Paid
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function markAsPaid() {
            // TODO: Implement mark as paid functionality
            alert('Mark as paid functionality will be implemented soon.');
        }
    </script>
}

<style>
.alert-sm { padding: 0.5rem 0.75rem; font-size: 0.875rem; }
.card { transition: transform 0.2s ease-in-out; }
.card:hover { transform: translateY(-1px); }
.btn-sm { padding: 0.375rem 0.75rem; font-size: 0.875rem; }
.badge { font-size: 0.75rem; font-weight: 500; }
</style> 